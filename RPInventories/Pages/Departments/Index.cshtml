@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using X.PagedList.Mvc.Core
@model IndexModel

@{
    ViewData["Title"] = "Departments";
}


@await Html.PartialAsync("Partials/Actions/CreateSearch", new CreateSearchViewModel
{
    SearchText = Model.SearchText,
    CreateTitle = "Create Department",
    TotalRecords = Model.TotalRecords
})

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table table-hover table-bordered table-striped">
    <thead class="bg-primary text-white">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Departments[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Departments[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Departments[0].CreatedAt)
            </th>
            <th> Actions </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Departments) {
        <tr>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td class="text-center">
                <partial name="Partials/Actions/_Crud" model="item.Id"/> 
            </td>
        </tr>
}

    </tbody>
</table>

@Html.PagedListPager(Model.Departments, page=>Url.Action("Index", new
    {
        CurrentPage = page, 
        Model.SearchText
    }),
    new PagedListRenderOptions
    {
        LiElementClasses = new[] {"page-item"},
        PageClasses = new[] {"page-link"}
    }
)














