@page
@using X.PagedList.Mvc.Core
@model RPInventories.Pages.Brands.IndexModel

@{
    ViewData["Title"] = "Brands";
}

<h1>@ViewData["Title"]</h1>
<p class="text-end">
    @Model.TotalRecords registers
</p>
<div class="row mb-3">
    <div class="col-6">
        <a class="btn btn-primary" asp-page="Create">
            <i class="fa-solid fa-plus"></i>&nbsp;Create Brand
        </a>
    </div>
    <div class="col-6">
        <form>
            <div class="input-group">
                <input asp-for="SearchTerm" class="form-control" placeholder="Search Term" 
                       aria-label="Search Term"/>
                <button name="SearchBtn" id="SearchBtn" type="submit" class="btn btn-outline-info">
                    <i class="fa-solid fa-magnifying-glass"></i>&nbsp;Search
                </button>
                <a asp-page="./Index" class="btn btn-outline-secondary">
                    <i class="fa-solid fa-arrows-rotate"></i>&nbsp;Clear
                </a>
            </div>
        </form>
    </div>
</div>

<table class="table table-hover table-bordered table-striped">
    <thead class="bg-primary text-white">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Brands[0].Name)
            </th>
            <th class="text-center">Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Brands) {
        <tr>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="text-center">
                <partial name="Partials/Actions/_Crud" model="item.Id"/>
            </td>
        </tr>
}
    </tbody>
</table>

@Html.PagedListPager(Model.Brands, page=>Url.Action("Index", new
    {
        CurrentPage = page,
        SearchTerm = Model.SearchTerm
    }), 
    new PagedListRenderOptions
    { 
        LiElementClasses = new string[] {"page-item"},
        PageClasses = new string[] {"page-link"}
    }
)   